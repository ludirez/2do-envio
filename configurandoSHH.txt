Luego de haber creado cuanta en github.
en consola:
        git config --global user.name "nombre de ususario de github" ->con comillas}
        git config --global user.email "correo registrado en github" ->con comilllas
        git config --list  -->para listar y ver que quedo configurado

en la carpeta de trabajo - Flujo basico de trabajo
    git init        ->inicia el seguimiento y registro de commits locales en la carpeta .git
    ls -lha         ->la carpeta .git esta oculta, este comando la mostrará
    git status      ->mostrara los quechivos trakeatos en rojo
    git add archivo.extencion       ->modo 1: pasará el archivo de rojo a verde y preparalo para el commits
    git add .                       ->modo 2: aprobara y agregara todos los archivos trakeados en rojo a la vez
    
para sacar del estado verde al rojo antes de hacer el commit:

    
    git commit -m "mensaje"         ->guardará en el repositorio local los cambios. el mensaje es obligatorio y descriptivo de lo que se esta actualizadno ene l commit

comandos adicionales de utilidad
    git Log                         ->mostrará listado de commits realizados, su codigo de seguimiento para restaurarlo de ser encesario y el mensaje descriptivo para mayor claridad

Creando Llave SSH
en consola, en la raiz del usuario -> ~$
    ssh-keygen -t rsa -b 4096 -C "correo@ejemplo.com"
        lease asi:
            ssh-keygen  ->comando
            -t          ->algoritmo de cifrado de Llave
            rsa         ->algoritmo usado ene sta ocasion
            -b          ->tamaño de la lalve en bites
            4096        ->el tamaño asignado ene sta ocasion 
            -C "x"      ->frase de codificacion donde X es la frase, van las comillas. generalmente se usa el email

        muestra la ruta donde se va a guarda la llave, le damos enter
        pedira clave adicional. enter en vacio omitira
        pedira reescribir la anterior clve adicional, enter para omitir nuevamente. 
        se ha creado la llave privada y publica.

configurando llave privada
    cd ~/.shh      ->desplaza a ruta
    ls              ->muestra id_rsa (privada) y id_rsa.pub (publica)
    eval "$(ssh-agent -s)"          ->comprobacion. puerto de servidor corriendo nativo en linux que se encargar encriptar y gestionar als llaves. debe arrojar "agent pid xxxx" donde X es un puerto. si lo muestra, todo ok.
    ssh-add ~/.ssh/id_rsa           ->identificacion privada gregada

configurando llave publica en github
    sudo apt install xclip      ->herramienta apra copiado de key seguro
    xclip -selection clipboard < ~/.shh/id_rsa.pub
        si no funciona el comando anterior, tambien se peude copiar manualmente con:
            cat ~/.shh/id_rsa.pub       ->mostrará la keypub en consola, copiar y pegar en git hub.

Subiendo a repositorio remoto
    git

Bajando de repositorio remoto
ir al repositorio en github y en el boton code, deplegamos, seleccionamos SSH y copiamos la ruta.
antes debes tener sin 
en consola:


